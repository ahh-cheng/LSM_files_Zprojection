/*
 * Macro template to process multiple images in a folder
 */

#@ File (label = "Input directory", style = "directory") input
#@ File (label = "Output directory", style = "directory") output
#@ String (label = "File suffix", value = ".lsm") suffix

// See also Process_Folder.py for a version of this code
// in the Python scripting language.

processFolder(input);

// function to scan folders/subfolders/files to find files with correct suffix
function processFolder(input) {
	list = getFileList(input);
	list = Array.sort(list);
	for (i = 0; i < list.length; i++) {
		if(File.isDirectory(input + File.separator + list[i]))
			processFolder(input + File.separator + list[i]);
		if(endsWith(list[i], suffix))
			processFile(input, output, list[i]);
	}
}

function processFile(input, output, file) {
	name = input + File.separator + file;
	run("Bio-Formats Importer", "open=["+name+"] color_mode=Colorized open_all_series rois_import=[ROI manager] view=Hyperstack stack_order=XYCZT");
	list = getList("image.titles");
	if (list.length==2){
		t1= list[0];
		t2 = list[1];
		run("Combine...", "stack1=["+t1+"] stack2=["+t2+"]");
		run("Z Project...", "projection=[Max Intensity]");
		saveAs("Tiff", output + File.separator + file);
		print("Processing: " + input + File.separator + file);
		print("Saving to: " + output);
		close();
		close();
	}
	if (list.length>2){
		run("Close All");
		run("Bio-Formats Importer", "open=["+name+"] color_mode=Colorized rois_import=[ROI manager] view=Hyperstack stack_order=XYCZT stitch_tiles");
		run("Z Project...", "projection=[Max Intensity]");
		saveAs("Tiff", output + File.separator + file);
		print("Processing: " + input + File.separator + file);
		print("Saving to: " + output);
		close();
		close();
	}
		
	if (list.length==1){
		run("Z Project...", "projection=[Max Intensity]");
		saveAs("Tiff", output + File.separator + file);
		print("Processing: " + input + File.separator + file);
		print("Saving to: " + output);
		close();
		close();
	}
}