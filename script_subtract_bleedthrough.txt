/*
 * Macro template to process multiple images in a folder
 */

#@ File (label = "Input directory", style = "directory") input
#@ File (label = "Output directory", style = "directory") output
#@ String (label = "File suffix", value = ".lsm") suffix

// See also Process_Folder.py for a version of this code
// in the Python scripting language.

processFolder(input);

// function to scan folders/subfolders/files to find files with correct suffix
function processFolder(input) {
	list = getFileList(input);
	list = Array.sort(list);
	for (i = 0; i < list.length; i++) {
		if(File.isDirectory(input + File.separator + list[i]))
			processFolder(input + File.separator + list[i]);
		if(endsWith(list[i], suffix))
			processFile(input, output, list[i]);
	}
}

function processFile(input, output, file) {
	open(file);
	run("Split Channels");
	imageCalculator("Subtract create stack", "C2-" + file,"C1-" + file);
	("Result of C2-" + file);
	imageCalculator("Subtract create stack", "C4-" + file,"C1-" + file);
	("Result of C4-" + file);
	
	c1 = "C1-"+file;
	c2 = "Result of C2-"+file;
	c3 = "C3-"+file;
	c4 = "Result of C4-"+file;
	run("Merge Channels...", "c1=["+c1+"] c2=["+c2+"] c3=["+c3+"] c4=["+c4+"] create");
	run("Z Project...", "projection=[Max Intensity]");
	saveAs("Tiff", output + File.separator + file);
	print("Processing: " + input + File.separator + file);
	print("Saving to: " + output);
	run("Close All");
}
